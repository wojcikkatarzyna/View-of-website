/*
	HTML5 Reset :: style.css
	----------------------------------------------------------
	We have learned much from/been inspired by/taken code where offered from:
	Eric Meyer					:: http://meyerweb.com
	HTML5 Doctor				:: http://html5doctor.com
	and the HTML5 Boilerplate	:: http://html5boilerplate.com
-------------------------------------------------------------------------------*/
/* Let's default this puppy out
-------------------------------------------------------------------------------*/
/* line 13, scss/_reset.scss */
html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent;
}

/* line 23, scss/_reset.scss */
main, article, aside, figure, footer, header, nav, section, details, summary {
  display: block;
}

/* Handle box-sizing while better addressing child elements:
   http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
/* line 27, scss/_reset.scss */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/* line 31, scss/_reset.scss */
*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

/* consider resetting the default cursor: https://gist.github.com/murtaugh/5247154 */
/* Responsive images and other embedded objects */
/* if you don't have full control over `img` tags (if you have to overcome attributes), consider adding height: auto */
/* line 41, scss/_reset.scss */
img,
object,
embed {
  max-width: 100%;
}

/*
   Note: keeping IMG here will cause problems if you're using foreground images as sprites.
	In fact, it *will* cause problems with Google Maps' controls at small size.
	If this is the case for you, try uncommenting the following:
#map img {
		max-width: none;
}
*/
/* force a vertical scrollbar to prevent a jumpy page */
/* line 55, scss/_reset.scss */
html {
  overflow-y: scroll;
}

/* we use a lot of ULs that aren't bulleted.
	you'll have to restore the bullets within content,
	which is fine because they're probably customized anyway */
/* line 60, scss/_reset.scss */
ul {
  list-style: none;
}

/* line 62, scss/_reset.scss */
blockquote, q {
  quotes: none;
}

/* line 64, scss/_reset.scss */
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

/* line 69, scss/_reset.scss */
a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/* line 71, scss/_reset.scss */
del {
  text-decoration: line-through;
}

/* line 73, scss/_reset.scss */
abbr[title], dfn[title] {
  border-bottom: 1px dotted #000;
  cursor: help;
}

/* tables still need cellspacing="0" in the markup */
/* line 76, scss/_reset.scss */
table {
  border-collapse: separate;
  border-spacing: 0;
}

/* line 77, scss/_reset.scss */
th {
  font-weight: bold;
  vertical-align: bottom;
}

/* line 78, scss/_reset.scss */
td {
  font-weight: normal;
  vertical-align: top;
}

/* line 80, scss/_reset.scss */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/* line 82, scss/_reset.scss */
input, select {
  vertical-align: middle;
}

/* line 84, scss/_reset.scss */
pre {
  white-space: pre;
  /* CSS2 */
  white-space: pre-wrap;
  /* CSS 2.1 */
  white-space: pre-line;
  /* CSS 3 (and 2.1 as well, actually) */
  word-wrap: break-word;
  /* IE */
}

/* line 91, scss/_reset.scss */
input[type="radio"] {
  vertical-align: text-bottom;
}

/* line 92, scss/_reset.scss */
input[type="checkbox"] {
  vertical-align: bottom;
}

/* line 93, scss/_reset.scss */
.ie7 input[type="checkbox"] {
  vertical-align: baseline;
}

/* line 94, scss/_reset.scss */
.ie6 input {
  vertical-align: text-bottom;
}

/* line 96, scss/_reset.scss */
select, input, textarea {
  font: 99% sans-serif;
}

/* line 98, scss/_reset.scss */
table {
  font-size: inherit;
  font: 100%;
}

/* line 100, scss/_reset.scss */
small {
  font-size: 85%;
}

/* line 102, scss/_reset.scss */
strong {
  font-weight: bold;
}

/* line 104, scss/_reset.scss */
td, td img {
  vertical-align: top;
}

/* Make sure sup and sub don't mess with your line-heights http://gist.github.com/413930 */
/* line 107, scss/_reset.scss */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}

/* line 108, scss/_reset.scss */
sup {
  top: -0.5em;
}

/* line 109, scss/_reset.scss */
sub {
  bottom: -0.25em;
}

/* standardize any monospaced elements */
/* line 112, scss/_reset.scss */
pre, code, kbd, samp {
  font-family: monospace, sans-serif;
}

/* hand cursor on clickable elements */
/* line 115, scss/_reset.scss */
.clickable,
label,
input[type=button],
input[type=submit],
input[type=file],
button {
  cursor: pointer;
}

/* Webkit browsers add a 2px margin outside the chrome of form elements */
/* line 123, scss/_reset.scss */
button, input, select, textarea {
  margin: 0;
}

/* make buttons play nice in IE */
/* line 126, scss/_reset.scss */
button,
input[type=button] {
  width: auto;
  overflow: visible;
}

/* scale images in IE7 more attractively */
/* line 130, scss/_reset.scss */
.ie7 img {
  -ms-interpolation-mode: bicubic;
}

/* prevent BG image flicker upon hover
   (commented out as usage is rare, and the filter syntax messes with some pre-processors)
.ie6 html {filter: expression(document.execCommand("BackgroundImageCache", false, true));}
*/
/* let's clear some floats */
/* line 138, scss/_reset.scss */
.clearfix:after {
  content: " ";
  display: block;
  clear: both;
}

@font-face {
  font-family: SofiaProBlack;
  src: url("../fonts/sofiaproblack-webfont.woff2") format("woff2");
}

@font-face {
  font-family: SofiaProRegular;
  src: url("../fonts/sofiaproregular-webfont.woff2") format("woff2");
}

@media (min-width: 693px) {
  /* line 1, scss/_body.scss */
  body {
    background-image: url("../images/body-background.png");
  }
}

/* line 1, scss/_view.scss */
.view {
  background: #519fd5;
  background-image: url("../images/background.jpg");
  background-size: contain;
  width: 100%;
  height: 100%;
  font-family: SofiaProRegular, Arial, sans-serif;
  color: white;
}

@media (min-width: 693px) {
  /* line 1, scss/_view.scss */
  .view {
    width: 405px;
    height: 700px;
    margin: 10px auto;
    background-position: top;
  }
}

/* line 16, scss/_view.scss */
.view:after {
  content: "";
  display: block;
  position: absolute;
  height: 109.5vw;
  top: 0;
  left: 0;
  right: 0;
  background: #94d9f4;
  opacity: 0.6;
}

@media (min-width: 693px) {
  /* line 16, scss/_view.scss */
  .view:after {
    display: none;
  }
}

/* line 30, scss/_view.scss */
.view:before {
  content: "";
  display: block;
  position: absolute;
  min-height: 13vw;
  top: 109.5vw;
  left: 0;
  right: 0;
  background: #7a54fc;
  opacity: 0.6;
  z-index: 1;
}

@media (min-width: 693px) {
  /* line 30, scss/_view.scss */
  .view:before {
    display: none;
  }
}

/* line 1, scss/_header.scss */
header {
  min-height: 41vw;
  text-align: center;
  padding-top: 1vw;
}

@media (min-width: 693px) {
  /* line 1, scss/_header.scss */
  header {
    min-height: 170px;
    padding-top: 15px;
  }
}

/* line 9, scss/_header.scss */
header h1 {
  font-family: SofiaProBlack, Arial, sans-serif;
  font-size: 9.75vw;
  letter-spacing: 0.5vw;
  line-height: 9.75vw;
}

@media (min-width: 693px) {
  /* line 9, scss/_header.scss */
  header h1 {
    font-size: 38px;
    letter-spacing: 2px;
    line-height: 38px;
  }
}

/* line 20, scss/_header.scss */
header h2 {
  font-family: SofiaProBlack, Arial, sans-serif;
  font-size: 7.5vw;
  letter-spacing: 0.75vw;
  line-height: 7.5vw;
}

@media (min-width: 693px) {
  /* line 20, scss/_header.scss */
  header h2 {
    font-size: 28px;
    letter-spacing: 4px;
    line-height: 28px;
  }
}

/* line 31, scss/_header.scss */
header hr {
  border-top: 0.5vw solid white;
}

@media (min-width: 693px) {
  /* line 31, scss/_header.scss */
  header hr {
    border-top: 2px solid white;
    margin: 13px 5px;
  }
}

/* line 38, scss/_header.scss */
header h3 {
  font-size: 7.5vw;
  letter-spacing: 0.15vw;
  line-height: 7vw;
}

@media (min-width: 693px) {
  /* line 38, scss/_header.scss */
  header h3 {
    font-size: 26px;
    letter-spacing: 2.5px;
    line-height: 26px;
  }
}

/* line 48, scss/_header.scss */
header h4 {
  font-size: 6vw;
  letter-spacing: 0.25vw;
  line-height: 6vw;
}

@media (min-width: 693px) {
  /* line 48, scss/_header.scss */
  header h4 {
    font-size: 24px;
    letter-spacing: 1px;
    line-height: 24px;
  }
}

/* line 1, scss/_main-part.scss */
main {
  text-align: center;
  height: 41vw;
}

/* line 4, scss/_main-part.scss */
main div.info {
  padding-top: 2.5vw;
  padding-bottom: 2.5vw;
  font-family: SofiaProBlack, Arial, sans-serif;
  font-size: 4.5vw;
  letter-spacing: 0.25vw;
  line-height: 4.5vw;
}

/* line 12, scss/_main-part.scss */
main form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-line-pack: justify;
      align-content: space-between;
  padding: 0 1.5vw;
  height: 26vw;
}

/* line 19, scss/_main-part.scss */
main form input[type="tel"] {
  width: 30%;
}

/* line 22, scss/_main-part.scss */
main form select, main form input[type="text"] {
  width: 47%;
  text-align-last: center;
}

/* line 26, scss/_main-part.scss */
main form input, main form select {
  height: 4.5vw;
  background: white;
  border: transparent;
  -webkit-box-shadow: 0.5vw 0.5vw 0px 0px rgba(0, 0, 0, 0.5);
          box-shadow: 0.5vw 0.5vw 0px 0px rgba(0, 0, 0, 0.5);
  font-family: SofiaProBlack, Arial, sans-serif;
  color: #757575;
  text-align: center;
  font-size: 1.5vw;
  z-index: 2;
  opacity: 0.6;
}

/* line 37, scss/_main-part.scss */
main form input option, main form select option {
  background: rgba(182, 225, 242, 0.8);
  opacity: 0.6;
}

/* line 42, scss/_main-part.scss */
main form div.agreement {
  width: 100%;
  padding-left: 2vw;
  z-index: 2;
  opacity: 0.6;
}

/* line 47, scss/_main-part.scss */
main form div.agreement input {
  height: 2.25vw;
  width: 2.25vw;
  -webkit-box-shadow: 0.25vw 0.25vw 0px 0px rgba(0, 0, 0, 0.5);
          box-shadow: 0.25vw 0.25vw 0px 0px rgba(0, 0, 0, 0.5);
}

/* line 52, scss/_main-part.scss */
main form div.agreement label {
  font-size: 1vw;
  padding-left: 2vw;
}

/* line 55, scss/_main-part.scss */
main form div.agreement label a {
  color: white;
}

/* line 60, scss/_main-part.scss */
main form input[type="submit"] {
  width: 100%;
  height: 7vw;
  margin: 0 27vw;
  background: #e70f2d;
  border: transparent;
  -webkit-box-shadow: 0.5vw 0.5vw 0px 0px rgba(0, 0, 0, 0.5);
          box-shadow: 0.5vw 0.5vw 0px 0px rgba(0, 0, 0, 0.5);
  font-family: SofiaProBlack, Arial, sans-serif;
  color: white;
  font-size: 2.5vw;
  opacity: 0.6;
}

/* line 1, scss/footer.scss */
footer {
  height: 40vw;
  position: relative;
}

/* line 4, scss/footer.scss */
footer img {
  position: absolute;
  bottom: 2vw;
  left: 0;
  right: 0;
  margin: auto;
  width: 47vw;
}

/* line 11, scss/main.scss */
.container {
  width: 74vw;
  margin: 0 auto;
}

@media (min-width: 693px) {
  /* line 11, scss/main.scss */
  .container {
    width: 300px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
